/**
 * Youtube Search APILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

import { ApiError } from '@apimatic/core';
import { ApiResponse, RequestOptions } from '../core';
import { optional, string, unknown } from '../schema';
import { BaseController } from './baseController';

export class ApiController extends BaseController {
  /**
   * @param key
   * @param q
   * @return Response from the API call
   */
  async search(
    key: string,
    q?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET', '/search');
    const mapped = req.prepareArgs({
      key: [key, string()],
      q: [q, optional(string())],
    });
    req.query('key', mapped.key);
    req.query('q', mapped.q);
    req.throwOn(400, ApiError, 'Key is not valid');
    req.authenticate(false);
    return req.callAsJson(unknown(), requestOptions);
  }
}
